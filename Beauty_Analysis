import pandas as pd
import gzip
from nltk import tokenize
from nltk.sentiment.vader import SentimentIntensityAnalyzer as SIA
import csv
import re

analyser = SIA()

def parse(path):
  g = gzip.open(path, 'rb')
  for l in g:
    yield eval(l)

def getDF(path):
  i = 0
  df = {}
  #count=0;
  for d in parse(path):
    #if count<15000 :
      df[i] = d
      i += 1
      #count+=1
    #else:
      #break

  return pd.DataFrame.from_dict(df, orient='index')

def getDict(path):
  i = 0
  prdt_dict = []
  #count=0;
  keys=['description','imUrl','salesRank','categories','related','brand','bought_together']
  for d in parse(path):
      #print d
    for k in keys:
          if k in d:
            del d[k]
    #if count<10 :
    prdt_dict.append(d)
        #count+=1
    #else:
     #   break

  return prdt_dict

def print_sentiment_scores(sentence):
    ans = analyser.polarity_scores(sentence)
    return ans['compound']


def ifmore(name_set):
    print 'Which one did you mean?? please provide more info....'
    print name_set
    new_set=[]
    test(new_set)

def test(new_set):
    #print new_set
    prdt_name = raw_input("Which product would you like to know about").lower()

    prdt_list_name=re.findall(r'\w+',prdt_name)

    overall_count=0
    positive_count=0
    negative_count=0
    neutral_count=0
    total_sentiment_value=0
    avg_sentiment_value=0

    with open('prdtReview.csv') as f:
        csvReader = csv.reader(f)
        for row in csvReader:
            #print row
            if all(subs in row[1].lower() for subs in prdt_list_name):
                new_set.append(row[1])
                name_set = set(new_set)
                #print len(name_set)
                if len(name_set)>1:

                    ifmore(name_set)


                else:
                    overall_count+=1
                    if float(row[-1])>0.00:
                        positive_count+=1
                    elif float(row[-1])==0.00:
                        neutral_count+=1
                    else:
                        negative_count+=1

                    total_sentiment_value+=float(row[-1])

    avg_sentiment_value=total_sentiment_value/overall_count

    print("******PRODUCT REPORT*******")
    print 'Total number of reviewers = ',overall_count
    print 'Number of positive reviews = ',positive_count
    print 'Number of neutral reviews = ', neutral_count
    print 'Number of negative reviews = ',negative_count
    print 'Mean sentiment score = ',round(avg_sentiment_value,2)
    exit()

def main():
    print('Loading , please wait....')


    #download_dir = "prdtReview1.csv"  # where you want the file to be downloaded to

    #csv1 = open(download_dir, "w")
    # "w" indicates that you're writing strings to the file

    #columnTitleRow = "prdt_id, prdt_title, reviewerID, sentiment_score\n"
    #csv1.write(columnTitleRow)

    #df = getDF('/Users/shreyajoshi/Downloads/reviews_Beauty_5.json.gz')
    #prdt_dict_list=getDict('/Users/shreyajoshi/Documents/722-term paper/meta_Beauty.json.gz')



    #print(prdt_dict_list)

    # with open('unique_prdt_vals.csv') as f:
    #     csvReader = csv.reader(f)
    #     for row in csvReader:
    #         print row[0]
    #         this_list=next((item for item in prdt_dict_list if item["asin"] == row[0]), None)
    #         #this_list=filter(lambda name: name['asin'] == row[0], prdt_dict_list)
    #         print this_list
    #         name=this_list['title']
    #         print(name)

    #prdt_name=raw_input("Which product would you like to know about")
    #filter(lambda person: person['name'] == 'Pam', people)
    #print prdt_dict
    #df['prdt_name']=df2
    # i=0
    # flag=True
    # #senti_score=0
    # for sentence in df['reviewText']:
    #     senti_score=print_sentiment_scores(sentence)
    #     #writeToFile(df['asin'],senti_score,flag)
    #     this_list = next((item for item in prdt_dict_list if item["asin"] == df.loc[i,'asin']), None)
    #     rowline = df.loc[i,'asin']+","+str(this_list['title'])+","+df.loc[i,'reviewerID']+","+str(senti_score)+"\n"
    #     #print rowline
    #     csv1.write(rowline)
    #     i+=1
    #     print(i)
    #
    new_set = []
    test(new_set)

main()
#B00821UJJQ
#B00822YOIM